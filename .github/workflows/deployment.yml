name: deploy imc back
on: [push]
env:
  IMAGE: imc-ms
  VERSION: 0.0.3
jobs:
  create-folder:
    name: create folder
    runs-on: ubuntu-latest
    steps:
      - name: execute commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            mkdir /opt/applications/imc/${{env.IMAGE}}
            ls -al /opt/applications/imc

  generate-image:
    name: generate image
    runs-on: ubuntu-latest
    needs: ['create-folder']
    steps:
      - name: cloner le repertoire
        uses: actions/checkout@master
      - name: setup java version
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - name: Generate and push image
        run: |
          ./mvnw clean package spring-boot:build-image \
          -Ddocker.publishRegistry.username=${{secrets.DCK_USERNAME}} \
          -Ddocker.publishRegistry.password=${{secrets.DCK_PASSWORD}} \
          -Dspring-boot.build-image.publish=true \
          -Dmaven.test.skip=true
  run-container:
    name: run container
    runs-on: ubuntu-latest
    needs: [ 'create-folder', 'generate-image']
    steps:
      - name: cloner le repertoire
        uses: actions/checkout@master
      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: "compose.yml"
          target: /opt/applications/imc/${{env.IMAGE}}
      - name: execute commands to run container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            echo DB_HOST="${{ secrets.DB_HOST }}" >> /opt/applications/imc/${{env.IMAGE}}/.env
            echo DB_USERNAME="${{ secrets.DB_USERNAME }}" >> /opt/applications/imc/${{env.IMAGE}}/.env
            echo DB_USERNAME="${{ secrets.DB_PASSWORD }}" >> /opt/applications/imc/${{env.IMAGE}}/.env
            docker compose -f /opt/applications/imc/${{env.IMAGE}}/compose.yml up -d